plugins {
    id "com.android.application"
    id 'com.google.gms.google-services' // Google services plugin
    id "kotlin-android" // Kotlin plugin
    id "dev.flutter.flutter-gradle-plugin" // Flutter Gradle plugin
}

// Load keystore properties for release builds
def keystoreProperties = new Properties()
def keystoreFile = rootProject.file("key.properties")
if (keystoreFile.exists()) {
    keystoreFile.withReader("UTF-8") { reader ->
        keystoreProperties.load(reader)
    }
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.ontechinc.opatralondon"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.ontechinc.opatralondon"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // Enable MultiDex if needed
        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (keystoreProperties.containsKey('storeFile')) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            } else {
                // Fallback to debug signing if key.properties is missing
                storeFile file("debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }

    buildTypes {
        debug {
            // Use the default debug signing config
            signingConfig signingConfigs.debug
        }
        release {
            // Use the custom release signing config
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"

    // Core Library Desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    // Firebase Analytics (example dependency)
    implementation 'com.google.firebase:firebase-analytics:21.2.0'
}

flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'